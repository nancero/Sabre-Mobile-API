image: docker:latest

services:
  - docker:dind

before_script:
  - apk add --update --no-cache python3-dev python3 curl jq
  - curl -O https://bootstrap.pypa.io/get-pip.py && python3 get-pip.py
  - pip install awscli
  - $(aws ecr get-login --no-include-email --region "${AWS_REGION}")
  - IMAGE_TAG="$CI_COMMIT_SHORT_SHA"

stages:
  - build
  - deploy

build:
  stage: build
  script:
    - echo "Building image..."
    - docker build -t $AWS_ECR_REPOSITORY_URI:latest .
    - echo "Tagging image..."
    - docker tag $AWS_ECR_REPOSITORY_URI:latest $AWS_ECR_REPOSITORY_URI:$IMAGE_TAG
    - echo "Pushing image..."
    - docker push $AWS_ECR_REPOSITORY_URI:latest
    - docker push $AWS_ECR_REPOSITORY_URI:$IMAGE_TAG
  only:
    - master

deploy:
  stage: deploy
  script:
    - echo $AWS_ECR_REPOSITORY_URI:$IMAGE_TAG
    - TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition "$AWS_ECS_TASK_DEFINITION_NAME" --region "${AWS_REGION}")
    - NEW_CONTAINER_DEFINITION=$(echo $TASK_DEFINITION | jq --arg IMAGE "$AWS_ECR_REPOSITORY_URI:$IMAGE_TAG" '.taskDefinition.containerDefinitions[0].image = $IMAGE | .taskDefinition.containerDefinitions[0]')
    - echo "Registering new container definition..."
    - aws ecs register-task-definition --region "${AWS_REGION}" --family "${AWS_ECS_TASK_DEFINITION_NAME}" --container-definitions "${NEW_CONTAINER_DEFINITION}"
    - echo "Updating the service..."
    - aws ecs update-service --region "${AWS_REGION}" --cluster "${AWS_ECS_CLUSTER_NAME}" --service "${AWS_ECS_SERVICE_NAME}"  --task-definition "${AWS_ECS_TASK_DEFINITION_NAME}"
  only:
    - master
